plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'greenlink'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = "worldedit"
        url = "https://maven.enginehub.org/repo/"
    }
    maven {
        url = "https://libraries.minecraft.net"
    }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
}

dependencies {
    compileOnly("com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT")

    compileOnly(files("C:/Users/fev01/Desktop/1.16.5/cache/patched_1.16.5.jar"))

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    implementation 'com.jeff-media:MorePersistentDataTypes:2.4.0'

    compileOnly 'me.clip:placeholderapi:2.11.6'

    compileOnly("com.sk89q.worldedit:worldedit-bukkit:7.2.17-SNAPSHOT")
    compileOnly 'com.sk89q.worldedit:worldedit-core:7.2.17-SNAPSHOT'

    implementation 'com.zaxxer:HikariCP:6.0.0'
    implementation 'org.xerial:sqlite-jdbc:3.46.1.3'

    compileOnly 'com.comphenix.protocol:ProtocolLib:5.3.0'

    compileOnly 'com.mojang:authlib:1.6.25'
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

compileJava.options.encoding = 'UTF-8'

tasks.register('copyToLib', Copy) {
    into "C:/Users/fev01/Desktop/1.16.5/plugins"
    rename { "TNTRun.jar" }
    from shadowJar
}

shadowJar {
    relocate 'com.jeff_media.morepersistentdatatypes', 'greenlink.tntrun.morepersistentdatatypes'
}

build {
    dependsOn copyToLib
}